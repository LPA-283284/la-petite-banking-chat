import streamlit as st
import datetime
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import json
st.set_page_config(page_title="LPA Banking", page_icon="ðŸ“Š")
st.title("LPA - BANKING")

st.markdown("You can enter detailed banking information by filling in the fields below.")

today = datetime.date.today()
date = st.date_input("Date", today)

# SatÄ±ÅŸlar ve Ã¶demeler
gross_total = st.number_input("Gross (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
net_total = st.number_input("Net (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
service_charge = st.number_input("Service Charge (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
discount_total = st.number_input("Discount (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
complimentary_total = st.number_input("Complimentary (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
staff_food = st.number_input("Staff Food (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")

# Otomatik hesaplama
calculated_taken_in = gross_total - (discount_total + complimentary_total + staff_food)
st.markdown(f"### ðŸ’¸ Taken In (Calculated): Â£{calculated_taken_in:.2f}")

# Kredi kartlarÄ±
cc1 = st.number_input("CC 1 (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
cc2 = st.number_input("CC 2 (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
cc3 = st.number_input("CC 3 (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")

# Amex
amex1 = st.number_input("Amex 1 (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
amex2 = st.number_input("Amex 2 (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
amex3 = st.number_input("Amex 3 (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")

# DiÄŸer Ã¶ÄŸeler
voucher = st.number_input("Voucher (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
deposit_minus = st.number_input("Deposit ( - ) (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="deposit_minus")

# SipariÅŸ platformlarÄ±
Deliveroo = st.number_input("Deliveroo (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
Ubereats = st.number_input("Uber Eats (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
Petty_Cash = st.number_input("Petty Cash (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")

# Otomatik Till Balance
calculated_till_balance = calculated_taken_in - (cc1 + cc2 + cc3 + amex1 +amex2+ amex3 + voucher + deposit + deliveroo + ubereats + Petty_Cash)
st.markdown(f"### ðŸ§¾ Till Balance (Calculated): Â£{calculated_till_balance:.2f}")

# DiÄŸer bilgiler
deposit = st.number_input("Deposit ( + ) (Â£)", min_value=0.0, format="%.2f", key="deposit1", value=None, placeholder="0.00", key="gross_total")
tips_credit_card = st.number_input("Tips (CC) (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
tips_sc = st.number_input("Servis Charge (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
till_balance = st.number_input("Till Balance (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
cash_envelope = st.number_input("Cash in Envelope (Â£)", min_value=0.0, format="%.2f", value=None, placeholder="0.00", key="gross_total")
float_val = st.number_input("Float (Â£)", min_value=75.00, format="%.2f", value=None, placeholder="0.00", key="gross_total")


item_missing_kitchen = st.text_input("Mutfakta Eksik Olanlar")
item_missing_floor = st.text_input("Serviste Eksik Olanlar")
eat_out = st.text_input("Eat Out to Help Out")
comments = st.text_area("MÃ¼ÅŸteri YorumlarÄ±")
manager = st.text_input("YÃ¶netici")
floor_staff = st.text_input("Servis Personeli")
kitchen_staff = st.text_input("Mutfak Personeli")

# Google Sheets baÄŸlantÄ±sÄ±
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
json_data = st.secrets["GOOGLE_SHEETS_CREDENTIALS"]
info = json.loads(json_data)
credentials = ServiceAccountCredentials.from_json_keyfile_dict(info, scope)

client = gspread.authorize(credentials)
sheet = client.open("La Petite Banking Extended").sheet1

if st.button("Verileri GÃ¶nder"):
    row = [str(date), cash_total, gross_total, net_total, service_charge, discount_total, complimentary_total,
           staff_food, total_taken_in, total_final, cc1, cc2, cc3, amex1, amex2, amex3, voucher, tips_cash,
           tips_sc, deposit, deliveroo, ubereats, till_balance, cash_envelope, float_val, total_hours,
           item_missing_kitchen, item_missing_floor, eat_out, comments, manager, floor_staff, kitchen_staff]

    sheet.append_row(row)
    st.success("Veriler Google Sheets'e baÅŸarÄ±yla gÃ¶nderildi!")

    columns = ["Tarih", "Kasa", "BrÃ¼t", "Net", "Servis", "Ä°ndirim", "Ä°kram", "Personel YemeÄŸi", "Toplam AlÄ±nan", "Genel Toplam",
               "CC1", "CC2", "CC3", "Amex1", "Amex2", "Amex3", "Voucher", "BahÅŸiÅŸ Nakit", "Servis Charge", "Kapora",
               "Deliveroo", "Uber Eats", "Kasa Bakiyesi", "Zarf Nakit", "Float", "Toplam Saat",
               "Eksik Mutfak", "Eksik Servis", "Eat Out", "Yorumlar", "YÃ¶netici", "Servis Personeli", "Mutfak Personeli"]

    df = pd.DataFrame([row], columns=columns)
    st.dataframe(df)
